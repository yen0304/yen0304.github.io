<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL職場實戰 on Yen&#39;s部落格</title>
    <link>https://yen0304.github.io/categories/sql%E8%81%B7%E5%A0%B4%E5%AF%A6%E6%88%B0/</link>
    <description>Recent content in SQL職場實戰 on Yen&#39;s部落格</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 20 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://yen0304.github.io/categories/sql%E8%81%B7%E5%A0%B4%E5%AF%A6%E6%88%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL職場實戰(1)-nvarchar型態轉換學習之不要相信ISNUMERIC</title>
      <link>https://yen0304.github.io/p/sql%E8%81%B7%E5%A0%B4%E5%AF%A6%E6%88%B01-nvarchar%E5%9E%8B%E6%85%8B%E8%BD%89%E6%8F%9B%E5%AD%B8%E7%BF%92%E4%B9%8B%E4%B8%8D%E8%A6%81%E7%9B%B8%E4%BF%A1isnumeric/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yen0304.github.io/p/sql%E8%81%B7%E5%A0%B4%E5%AF%A6%E6%88%B01-nvarchar%E5%9E%8B%E6%85%8B%E8%BD%89%E6%8F%9B%E5%AD%B8%E7%BF%92%E4%B9%8B%E4%B8%8D%E8%A6%81%E7%9B%B8%E4%BF%A1isnumeric/</guid>
      <description>SQL職場實戰-nvarchar型態轉換學習之不要相信ISNUMERIC 進入公司的第三個星期，碰到了一個題目，內容就是需要將好幾萬筆資料的table取值並比大小，因為資料數量龐大，資料欄位的型態是nvarchar，所以在過程中學到了不少需要轉換的方式。
第一步驟 了解nvarchar欄位內容 其中最有印象的就是其中有一個欄位的最後面需要判斷值是否大於12，如果是就保留，不是就為0，
還有特殊格式需做處理，所以在不斷Error出現之後，學到了使用DISTINCT（早就知道有這個方法，但是沒想到那麼好用），因為資料都是客戶輸入的，所以需先了解資料有哪些樣子，對欄位的數值去做對應的處理。
SELECTDISTINCT[column]FROM[table]那印出來之後，主要資料分這幾種型態： （實際上爆幹多&amp;hellip;這邊列出幾個重點）
   column 欄位名稱以下都是A     1,000.00   Bcolumn欄位值的8倍   80/1000   10   12.00   1000[全形空白鍵]   1000/12/20    在規格需求時，也有特別說明，80/1000這類的格式要選擇小的（要求真的很多），但像是1000/12/20就要為0，不符合格式，簡單說除了上面提到的特殊格式，還有大於12的數字，其他都要為0。
那在最後進行比較數值是否大於12時，可能會這樣寫：
SELECT [item] --（item可能是商品名稱之類的，不是重點） ,[A] =CASE WHEN [A] &amp;gt;12 THEN [A] ELSE 0 END FROM nvarchar 轉換方向 我們一般會很直覺的想要用CONVERT、CAST，但是由於我們上面的資料太多種類，甚至出現了中文、還有小數點甚至出現了全形空白符號等等，在轉換的時候一定會出現Error navrchar 不能轉換int之類的訊息，所以我分成了兩個表之後在使用union垂直合併。
開始轉換 所以轉換分成兩種：
使用REPLAC + TRIM 對所有欄位進行過濾，去除不必要的符號 在最終，我們的型態是int，所以我們要設定的值會是數字，所以要確保下面在轉換的過程中順利，先去除有可能在欄位中，全行與半形符號，至於我怎麼找到有全形空白鍵，那又是另一則故事了&amp;hellip;（總之我也是DISTINCT慢慢點擊欄位看出來的），只能說工作上學到的東西真的蠻多的&amp;hellip;吧
所以用WITH AS的方式讓下面的table使用REPLAC + TRIM 對所有欄位進行過濾，去除不必要的符號，再讓其他人使用：</description>
    </item>
    
  </channel>
</rss>
